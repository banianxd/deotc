const CONTRACT_NAME="fibosuserp2p",error_msg=["no this id record","USER NO TOKEN","not your seller","status error","NEED FO","arbitrate NEED MORE 1000000","fuck you, blacklist","sell number > buy number","sell token = buy token","rich NEED MORE 200000"];function sendToken(t,e,a,r){trans.send_inline("eosio.token","transfer",{from:t,to:e,quantity:a,memo:r},[{actor:t,permission:"active"}])}function getBalance(t,e="FO",a="eosio.token"){let r,s=db.accounts(a,t).begin();for(;s.data&&((r=s.data.balance.quantity.split(" "))[0]=Number(r[0]),r[1]!==e);)s=s.next();return assert(s.data,error_msg[1]),r}function getPlayer(t){const e=db.players(CONTRACT_NAME,CONTRACT_NAME);return{players:e,player:e.find(t)}}const record_indexes={seller:[64,t=>[t.seller]],buyer:[64,t=>[t.buyer]]};function getRecord(t){const e=db.records(CONTRACT_NAME,CONTRACT_NAME,record_indexes);return{record:e.find(t),records:e}}function getAccount(){let t=action.authorization[0].actor;return action.require_auth(t),t}function assert_arbitrate(t){const e=db.producers("eosio","eosio").find(t),a=getBalance(t);assert(e.data&&Number(e.data.total_votes)>getConfig(1)||Number(a[0])>getConfig(9),"need bp or richer")}function assert_userinfo(t){let e=db.userinfos(CONTRACT_NAME,t).begin();assert(e.data,"需要先设置支付信息")}function assert_sell_buy(t,e){const a=t.split(" "),r=e.split(" ");assert(Number(a[0])>=Number(r[0]),error_msg[7]),assert(a[1]===r[1],error_msg[8])}function assert_maintenance(){assert(0==getConfig(6),"系统维护中")}function assert_player_count(t){const{player:e}=getPlayer(t);assert(e.data&&e.data.cur_count-e.data.success_count<2,"用户不能部署多个订单")}const global=db.global(CONTRACT_NAME,CONTRACT_NAME);function getConfig(t){const e=global.find(t);return e.data?e.data.value:[arbitrater_count=3,bp_total_votes=3e17,rich_limit=2e4,arbitrate_timeout=432e8,appeal_timeout=432e8,pay_limit=2e7,is_maintenance=0,service_pay=1e4,staking_pay=1e7,user_record_limit=1][t]}function update_record_id(t,e){const{player:a}=getPlayer(t);a.data&&(a.data.cur_count++,a.data.record_id=e,a.update(CONTRACT_NAME))}function _after_cur_count(t){const{player:e}=getPlayer(t);e.data&&(e.data.cur_count--,e.update(CONTRACT_NAME))}exports.config=((t,e)=>{action.require_auth(CONTRACT_NAME);const a=db.global(CONTRACT_NAME,CONTRACT_NAME).find(t);a.data?(a.data.value=e,a.update(CONTRACT_NAME)):a.emplace(CONTRACT_NAME,{id:t,value:e})}),exports.deltable=((t,e,a)=>{action.require_auth(CONTRACT_NAME),assert(db[t],"no this table");const r=db[t](CONTRACT_NAME,e);if(a){const t=r.find(a);assert(record.data,"need have data"),t.remove()}else{let t,e=r.begin(),a=0;do{t=e.next(),e.remove(),e=t,a++}while(a<30&&e.data)}}),exports.on_transfer=((t,e,a,r)=>{if(t===CONTRACT_NAME||e!==CONTRACT_NAME)return;const s=a.split(" "),d=r.split(","),o=d[0],n=action.publication_time;if(assert_userinfo(t),assert_player_count(t),"1"===o){const e=Number(d[1]),r=Number(d[2]),s=db.records(CONTRACT_NAME,CONTRACT_NAME,record_indexes),o=s.get_primary_key(),c={id:o,seller:t,buyer:"",dateline:n,pay:a,buy_pay:a,status:1,price:e,type:1,pay_type:r};s.emplace(CONTRACT_NAME,c),update_record_id(t,o)}else if("2"===o){const e=Number(d[1]),r=d[2],o=Number(d[3]);assert(Number(s[0])==getConfig(7)/1e4,"1.0000 FO 服务费");const c=db.records(CONTRACT_NAME,CONTRACT_NAME,record_indexes),u=c.get_primary_key(),_={id:u,seller:CONTRACT_NAME,buyer:t,dateline:n,pay:a,buy_pay:r,status:1,price:e,type:2,pay_type:o};c.emplace(CONTRACT_NAME,_),update_record_id(t,u)}else if("3"===o){const e=Number(d[1]),r=Number(d[2]),o=getBalance(t);assert(o,error_msg[4]),assert(o[0]>=getConfig(2),error_msg[5]),assert("FO"===o[1],"进场单只接受FO"),assert(Number(s[0])==getConfig(8)/1e4,"1000.0000 FO 抵押费用");const c=db.records(CONTRACT_NAME,CONTRACT_NAME,record_indexes),u=c.get_primary_key(),_={id:u,seller:t,buyer:CONTRACT_NAME,dateline:n,pay:a,buy_pay:a,status:1,price:e,type:3,pay_type:r};c.emplace(CONTRACT_NAME,_),update_record_id(t,u)}else if("4"===o){const e=Number(d[1]),r=Number(d[2]),s=db.records(CONTRACT_NAME,CONTRACT_NAME,record_indexes).find(e);assert(s.data,error_msg[0]),assert(2==s.data.type,"需为用户买单"),assert(1==s.data.status,"未锁定订单"),assert_sell_buy(a,s.data.buy_pay),s.data.status=2,s.data.seller=t,s.data.pay=a,s.data.dateline=n,r>-1&&(s.data.pay_type=r),s.update(CONTRACT_NAME),update_record_id(t,e)}}),exports.setinfo=((t,e,a)=>{const r=getAccount(),s=db.userinfos(CONTRACT_NAME,r),d=s.find(t);d.data?(d.data.acct=e,d.update(r)):s.emplace(r,{id:t,acct:e});const{player:o,players:n}=getPlayer(r);if(!o.data){a&&action.is_account(a);const t={id:r,record_id:-1,success_count:0,arbitrate_count:0,cur_count:0,ref:a};n.emplace(CONTRACT_NAME,t)}}),exports.buy=((t,e)=>{const a=getAccount(),{record:r}=getRecord(t);assert(r.data,error_msg[0]),assert(1==r.data.type,"常规订单,用户才能链上购买"),assert(1==r.data.status,error_msg[1]),assert_sell_buy(r.data.pay,e);const{player:s,players:d}=getPlayer(a);if(s.data)s.data.cur_count++,s.update(CONTRACT_NAME);else{const e={id:a,record_id:t,success_count:0,arbitrate_count:0,cur_count:1,ref:""};d.emplace(CONTRACT_NAME,e)}assert_player_count(a);const o=getBalance(a);assert("FO"===o[1],"只接受FO"),assert(o[0]>100,"请先进场,账号需要大于100FO"),r.data.status=2,r.data.buy_pay=e,r.data.buyer=a,r.update(CONTRACT_NAME)}),exports.updateorder=((t,e)=>{const a=getAccount(),{record:r}=getRecord(t);assert(r.data,error_msg[0]),assert(1==r.data.status,error_msg[1]),assert(r.data.seller===a,"本人订单"),r.data.price=e,r.update(CONTRACT_NAME)}),exports.cancelorder=(t=>{const e=getAccount(),{record:a}=getRecord(t);if(assert(a.data,error_msg[0]),a.data.seller===e){assert(1==a.data.status,error_msg[1]);let t=a.data.pay;if(3==a.data.type){const e=a.data.pay.split(" "),r=e[0].split(".")[1].length;t=(Number(e[0])-getConfig(6)/1e4).toFixed(r)+" "+e[1]}_after_cur_count(e),sendToken(CONTRACT_NAME,e,t,"退回订单pay"),a.remove()}else a.data.buyer===e?1==a.data.type?(assert(a.data.status>=2,error_msg[1]),_after_cur_count(e),a.data.status=1,a.data.buyer="",a.update(CONTRACT_NAME)):2==a.data.type?(assert(1==a.data.status,error_msg[1]),_after_cur_count(e),a.remove()):assert(!1,"其它订单不能取消"):assert(!1,"非卖家/买家不能取消订单")}),exports.result=(t=>{const e=getAccount(),{record:a}=getRecord(t);assert(a.data,error_msg[0]),assert(a.data.seller===e,error_msg[2]),assert(a.data.status>=2,error_msg[3]);const r=a.data.buy_pay,s=a.data.pay.split(" "),d=s[0].split(".")[1].length,o=a.data.buy_pay.split(" ");assert(s[1]===o[1],"buy === sell asset!");const n=Number(s[0])-Number(o[0]),c=db.players(CONTRACT_NAME,CONTRACT_NAME),u=c.find(a.data.buyer);u.data&&(u.data.cur_count--,u.update(CONTRACT_NAME)),sendToken(CONTRACT_NAME,a.data.buyer,r,"pay success"),n>0?(a.data.pay=n.toFixed(d)+" "+s[1],a.data.buyer="",a.data.status=1,a.update(CONTRACT_NAME)):a.remove();const _=c.find(e);_.data&&(_.data.success_count++,_.update(CONTRACT_NAME))}),exports.applyarb=(t=>{const e=getAccount(),{record:a}=getRecord(t);assert(a.data,error_msg[0]),assert(e===a.data.seller||e===a.data.buyer,"需要买家或卖家"),assert(parseInt(a.data.dateline)+parseInt(getConfig(3))<action.publication_time,"需要一天，双方没有和解才能，才能申请仲裁"),a.data.status=3,a.data.dateline=action.publication_time,a.update(CONTRACT_NAME)});const arbitrate_indexes={record:[64,t=>[t.record_id]],account:[64,t=>[t.account]]};exports.arbitrate=((t,e,a)=>{const r=getAccount(),s=db.blacklist(CONTRACT_NAME,CONTRACT_NAME).find(r);assert(!s.data,error_msg[6]),assert(1==e||2==e,error_msg[5]);const{record:d}=getRecord(t);assert(d.data,error_msg[0]),assert_arbitrate(r);const o=db.arbitration(CONTRACT_NAME,CONTRACT_NAME,arbitrate_indexes),n=action.publication_time;let c=o.indexes.record.find({record_id:t}),u=0;for(;c.data;)assert(c.data.account!==r,"该账号，已仲裁"),u++,c=c.next();u>0&&assert(5==d.data.status,"当一个仲裁人裁决后, 如上诉，在有仲裁人加入时，订单状态必须为上诉仲裁中"),3==d.data.status&&(d.data.status=4),d.update(CONTRACT_NAME),o.emplace(CONTRACT_NAME,{id:o.get_primary_key(),record_id:t,account:r,dateline:n,win:e,memo:a})}),exports.appeal=(t=>{const e=getAccount(),{record:a}=getRecord(t);assert(a.data,error_msg[0]),assert(e===a.data.seller||e===a.data.buyer,"需要买家或卖家"),assert(4==a.data.status,error_msg[3]),a.data.status=5,a.data.dateline=action.publication_time,a.update(CONTRACT_NAME)}),exports.withdraw=(t=>{const e=getAccount(),{record:a}=getRecord(t);assert(a.data,error_msg[0]),assert(e===a.data.seller||e===a.data.buyer,"需要买家或卖家");let r=db.arbitration(CONTRACT_NAME,CONTRACT_NAME,arbitrate_indexes).indexes.record.find({record_id:t});const s=action.publication_time;if(4==a.data.status){if(assert(parseInt(a.data.dateline)+parseInt(getConfig(4))<s,"仲裁后,规定时间没有上诉，买家即可提现"),r.data){if(1==r.data.win)_after_cur_count(a.data.buyer),a.data.status=1,a.data.buyer="",a.update(CONTRACT_NAME);else if(2==r.data.win){const t=db.players(CONTRACT_NAME,CONTRACT_NAME),e=t.find(a.data.buyer);e.data&&(e.data.cur_count--,e.update(CONTRACT_NAME));const r=t.find(a.data.seller);r.data&&(r.data.cur_count--,r.update(CONTRACT_NAME)),sendToken(CONTRACT_NAME,a.data.buyer,a.data.buy_pay,"arbitrate success"),a.remove()}r.remove()}return}assert(5==a.data.status,"必须为上诉后"),assert(parseInt(a.data.dateline)+parseInt(getConfig(4))<s,"仲裁后，或者上诉后");let d=0,o=0,n=r;for(;n.data&&n.data.record_id===t;)1==n.data.win?d++:o++,n=n.next();const c=getConfig(0);if(d>o&&d>=c){const t=db.players(CONTRACT_NAME,CONTRACT_NAME),e=t.find(a.data.buyer);e.data&&(e.data.cur_count--,e.data.arbitrate_count++,e.update(CONTRACT_NAME)),a.data.status=1,a.data.buyer="",a.update(CONTRACT_NAME);const r=t.find(a.data.seller);r.data&&(r.data.arbitrate_count++,r.update(CONTRACT_NAME))}else if(o>d&&o>=c){const t=db.players(CONTRACT_NAME,CONTRACT_NAME),e=t.find(a.data.buyer);e.data&&(e.data.success_count++,e.data.arbitrate_count++,e.update(CONTRACT_NAME));const r=t.find(a.data.seller);r.data&&(r.data.cur_count--,r.data.arbitrate_count++,r.update(CONTRACT_NAME)),sendToken(CONTRACT_NAME,a.data.buyer,a.data.buy_pay,"appeal success"),a.remove()}else assert(!1,"还不能提现");for(;r.data;)n=r.next(),r.remove(),r=n}),exports.setgroup=(t=>{const e=getAccount();assert_arbitrate(e);const a=db.arbgroups(CONTRACT_NAME,CONTRACT_NAME),r=a.find(e);r.data?(r.data.acct=t,r.update(e)):a.emplace(CONTRACT_NAME,{account:e,acct:t})});